{"ast":null,"code":"export async function getUsersLoader() {\n  const response = await fetch(`/users`);\n  const users = await response.json();\n  return response.ok ? {\n    users\n  } : new Response(\"\", {\n    status: response.status,\n    statusText: \"Could not find the users\"\n  });\n}\nexport async function getUsersByIdLoader({\n  params\n}) {\n  const response = await fetch(`/users/${params.id}`);\n  const userObj = await response.json();\n  return response.ok ? {\n    userObj\n  } : new Response(\"\", {\n    status: response.status,\n    statusText: \"Could not find that user\"\n  });\n}\nexport async function getStocksLoader() {\n  const response = await fetch(`/stocks`);\n  const stocks = await response.json();\n  return response.ok ? {\n    stocks\n  } : new Response(\"\", {\n    status: response.status,\n    statusText: \"Could not find the stocks\"\n  });\n}\nexport async function getStocksByIdLoader({\n  params\n}) {\n  const response = await fetch(`/stocks/${params.id}`);\n  const stockObj = await response.json();\n  return response.ok ? {\n    stockObj\n  } : new Response(\"\", {\n    status: response.status,\n    statusText: \"Could not find that stock\"\n  });\n}\nexport async function getPostsLoader() {\n  const response = await fetch(`/posts`);\n  const posts = await response.json();\n  return response.ok ? {\n    posts\n  } : new Response(\"\", {\n    status: response.status,\n    statusText: \"Could not find the posts\"\n  });\n}\nexport async function getPostsByIdLoader({\n  params\n}) {\n  const response = await fetch(`/users/${params.id}`);\n  const postObj = await response.json();\n  return response.ok ? {\n    postObj\n  } : new Response(\"\", {\n    status: response.status,\n    statusText: \"Could not find that post\"\n  });\n}\n\n// useEffect (()=>{\n//   fetch(\"/users\")\n//   .then(res => res.json())\n//   .then(data => {\n//     set(data)\n//     console.log(data)\n//   }\n//   )\n// }, [])","map":{"version":3,"names":["getUsersLoader","response","fetch","users","json","ok","Response","status","statusText","getUsersByIdLoader","params","id","userObj","getStocksLoader","stocks","getStocksByIdLoader","stockObj","getPostsLoader","posts","getPostsByIdLoader","postObj"],"sources":["/home/fgangel/Development/Code/Phase-04/phase-4/client/phase-4-project/src/loaders.js"],"sourcesContent":["export async function getUsersLoader() {\n    const response = await fetch(`/users`)\n    const users = await response.json()\n    return response.ok\n        ? {users}\n        : new Response(\"\", { status: response.status, statusText: \"Could not find the users\" })\n}\n\nexport async function getUsersByIdLoader({params}) {\n    const response = await fetch(`/users/${params.id}`)\n    const userObj = await response.json()\n    return response.ok\n        ? {userObj}\n        : new Response(\"\", { status: response.status, statusText: \"Could not find that user\" })\n}\n\nexport async function getStocksLoader() {\n    const response = await fetch(`/stocks`)\n    const stocks = await response.json()\n    return response.ok\n        ? {stocks}\n        : new Response(\"\", { status: response.status, statusText: \"Could not find the stocks\" })\n}\n\nexport async function getStocksByIdLoader({params}) {\n    const response = await fetch(`/stocks/${params.id}`)\n    const stockObj = await response.json()\n    return response.ok\n        ? {stockObj}\n        : new Response(\"\", { status: response.status, statusText: \"Could not find that stock\" })\n}\n\nexport async function getPostsLoader() {\n    const response = await fetch(`/posts`)\n    const posts = await response.json()\n    return response.ok\n        ? {posts}\n        : new Response(\"\", { status: response.status, statusText: \"Could not find the posts\" })\n}\n\nexport async function getPostsByIdLoader({params}) {\n    const response = await fetch(`/users/${params.id}`)\n    const postObj = await response.json()\n    return response.ok\n        ? {postObj}\n        : new Response(\"\", { status: response.status, statusText: \"Could not find that post\" })\n}\n\n  // useEffect (()=>{\n  //   fetch(\"/users\")\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     set(data)\n  //     console.log(data)\n  //   }\n  //   )\n  // }, [])"],"mappings":"AAAA,OAAO,eAAeA,cAAcA,CAAA,EAAG;EACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,QAAO,CAAC;EACtC,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACnC,OAAOH,QAAQ,CAACI,EAAE,GACZ;IAACF;EAAK,CAAC,GACP,IAAIG,QAAQ,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAEN,QAAQ,CAACM,MAAM;IAAEC,UAAU,EAAE;EAA2B,CAAC,CAAC;AAC/F;AAEA,OAAO,eAAeC,kBAAkBA,CAAC;EAACC;AAAM,CAAC,EAAE;EAC/C,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASQ,MAAM,CAACC,EAAG,EAAC,CAAC;EACnD,MAAMC,OAAO,GAAG,MAAMX,QAAQ,CAACG,IAAI,CAAC,CAAC;EACrC,OAAOH,QAAQ,CAACI,EAAE,GACZ;IAACO;EAAO,CAAC,GACT,IAAIN,QAAQ,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAEN,QAAQ,CAACM,MAAM;IAAEC,UAAU,EAAE;EAA2B,CAAC,CAAC;AAC/F;AAEA,OAAO,eAAeK,eAAeA,CAAA,EAAG;EACpC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,SAAQ,CAAC;EACvC,MAAMY,MAAM,GAAG,MAAMb,QAAQ,CAACG,IAAI,CAAC,CAAC;EACpC,OAAOH,QAAQ,CAACI,EAAE,GACZ;IAACS;EAAM,CAAC,GACR,IAAIR,QAAQ,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAEN,QAAQ,CAACM,MAAM;IAAEC,UAAU,EAAE;EAA4B,CAAC,CAAC;AAChG;AAEA,OAAO,eAAeO,mBAAmBA,CAAC;EAACL;AAAM,CAAC,EAAE;EAChD,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,WAAUQ,MAAM,CAACC,EAAG,EAAC,CAAC;EACpD,MAAMK,QAAQ,GAAG,MAAMf,QAAQ,CAACG,IAAI,CAAC,CAAC;EACtC,OAAOH,QAAQ,CAACI,EAAE,GACZ;IAACW;EAAQ,CAAC,GACV,IAAIV,QAAQ,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAEN,QAAQ,CAACM,MAAM;IAAEC,UAAU,EAAE;EAA4B,CAAC,CAAC;AAChG;AAEA,OAAO,eAAeS,cAAcA,CAAA,EAAG;EACnC,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,QAAO,CAAC;EACtC,MAAMgB,KAAK,GAAG,MAAMjB,QAAQ,CAACG,IAAI,CAAC,CAAC;EACnC,OAAOH,QAAQ,CAACI,EAAE,GACZ;IAACa;EAAK,CAAC,GACP,IAAIZ,QAAQ,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAEN,QAAQ,CAACM,MAAM;IAAEC,UAAU,EAAE;EAA2B,CAAC,CAAC;AAC/F;AAEA,OAAO,eAAeW,kBAAkBA,CAAC;EAACT;AAAM,CAAC,EAAE;EAC/C,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASQ,MAAM,CAACC,EAAG,EAAC,CAAC;EACnD,MAAMS,OAAO,GAAG,MAAMnB,QAAQ,CAACG,IAAI,CAAC,CAAC;EACrC,OAAOH,QAAQ,CAACI,EAAE,GACZ;IAACe;EAAO,CAAC,GACT,IAAId,QAAQ,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAEN,QAAQ,CAACM,MAAM;IAAEC,UAAU,EAAE;EAA2B,CAAC,CAAC;AAC/F;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}